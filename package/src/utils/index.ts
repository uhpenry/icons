import {
  ActixIcon,
  AdonisJSIcon,
  AlpineJsIcon,
  AngularJsIcon,
  AntDesignIcon,
  APIIcon,
  ASPNETCoreIcon,
  AstroIcon,
  AureliaIcon,
  BackboneJsIcon,
  BashIcon,
  BlitzJSIcon,
  CakePHPIcon,
  CloudflareIcon,
  CodeIgniterIcon,
  CsharpIcon,
  CSSIcon,
  CycleJsIcon,
  DartIcon,
  DjangoIcon,
  DockerIcon,
  EchoIcon,
  ElmIcon,
  EmberIcon,
  EmotionCSSIcon,
  ExpressJsIcon,
  FastAPIIcon,
  FastifyIcon,
  FeathersJsIcon,
  FiberIcon,
  FlaskIcon,
  FramerMotionIcon,
  GatsbyIcon,
  GinIcon,
  GoLangIcon,
  GrailsIcon,
  GridsomeIcon,
  GSAPIcon,
  HapiIcon,
  HeadlessUIIcon,
  HeroIcon,
  HTMLIcon,
  HydrogenIcon,
  HyperAppIcon,
  JavaIcon,
  JavaScriptIcon,
  JuliaIcon,
  KnockoutJsIcon,
  KotlinIcon,
  LaravelIcon,
  LitIcon,
  LoopbackIcon,
  LottieIcon,
  LuaIcon,
  LucideIcon,
  MAMPIcon,
  MarkdownIcon,
  MarkoIcon,
  MaterialIcon,
  MATLABIcon,
  MercuryIcon,
  MeteorJsIcon,
  MithrilJsIcon,
  MoonJsIcon,
  NestJsIcon,
  NetlifyIcon,
  NextJsIcon,
  NpmIcon,
  NuxtJsIcon,
  PerlIcon,
  PhoenixIcon,
  PhosphorIcon,
  PHPIcon,
  PlayScalaIcon,
  PnpmIcon,
  PowershellIcon,
  PreactIcon,
  PythonIcon,
  QuarkusIcon,
  QuasarIcon,
  QwikIcon,
  RadixUIIcon,
  RazzleIcon,
  ReactJsIcon,
  ReactSpringIcon,
  RedwoodJSIcon,
  RefineIcon,
  RemixIcon,
  RIcon,
  RiotJsIcon,
  RocketIcon,
  RollupIcon,
  RubyIcon,
  RubyOnRailsIcon,
  RustIcon,
  ScalaIcon,
  ScullyIcon,
  ShadcnUIIcon,
  SolidJsIcon,
  SpringBootIcon,
  StencilIcon,
  StimulusIcon,
  StitchesIcon,
  StorybookIcon,
  StyledComponentsIcon,
  StyleDictionaryIcon,
  SvelteIcon,
  SwiftIcon,
  SymfonyIcon,
  TailwindCSSIcon,
  TypeScriptIcon,
  UnsrcIcon,
  VercelIcon,
  VertXIcon,
  ViteIcon,
  VueJsIcon,
  WaspIcon,
  WebpackIcon,
  XAMPPIcon,
  XMLIcon,
  YarnIcon,
  CargoIcon,
  ComposerIcon,
  ConanIcon,
  CondaIcon,
  GemIcon,
  HexIcon,
  MavenIcon,
  NuGetIcon,
  OpamIcon,
  PipIcon,
  PoetryIcon,
  VcpkgIcon,
} from '../icons';
import { IconNameType } from '../types';

export const library = {
  'C++': CsharpIcon,
  Java: JavaIcon,
  Python: PythonIcon,
  JavaScript: JavaScriptIcon,
  Ruby: RubyIcon,
  Perl: PerlIcon,
  PHP: PHPIcon,
  Swift: SwiftIcon,
  TypeScript: TypeScriptIcon,
  Kotlin: KotlinIcon,
  Go: GoLangIcon,
  Rust: RustIcon,
  R: RIcon,
  MATLAB: MATLABIcon,
  Lua: LuaIcon,
  Scala: ScalaIcon,
  Dart: DartIcon,
  Julia: JuliaIcon,
  Bash: BashIcon,
  PowerShell: PowershellIcon,
  HTML: HTMLIcon,
  CSS: CSSIcon,
  XML: XMLIcon,
  Markdown: MarkdownIcon,
  'Tailwind CSS': TailwindCSSIcon,
  'Material UI': MaterialIcon,
  'Framer Motion': FramerMotionIcon,
  GSAP: GSAPIcon,
  Lottie: LottieIcon,
  'React Spring': ReactSpringIcon,
  'Shadcn/ui': ShadcnUIIcon,
  'Radix UI': RadixUIIcon,
  'Headless UI': HeadlessUIIcon,
  'Ant Design': AntDesignIcon,
  'Phosphor Icons': PhosphorIcon,
  'Lucide Icons': LucideIcon,
  'Hero Icons': HeroIcon,
  'Material Icons': MaterialIcon,
  Storybook: StorybookIcon,
  'Style Dictionary': StyleDictionaryIcon,
  'Styled Components': StyledComponentsIcon,
  Emotion: EmotionCSSIcon,
  'CSS Modules': CSSIcon,
  Stitches: StitchesIcon,
  'API Development': APIIcon,
  'Alpine.js': AlpineJsIcon,
  'Angular.js': AngularJsIcon,
  Astro: AstroIcon,
  Aurelia: AureliaIcon,
  'Backbone.js': BackboneJsIcon,
  'Cycle.js': CycleJsIcon,
  Elm: ElmIcon,
  'Ember.js': EmberIcon,
  Hyperapp: HyperAppIcon,
  'Knockout.js': KnockoutJsIcon,
  Lit: LitIcon,
  Marko: MarkoIcon,
  Mercury: MercuryIcon,
  Meteor: MeteorJsIcon,
  'Mithril.js': MithrilJsIcon,
  'Moon.js': MoonJsIcon,
  Preact: PreactIcon,
  Qwik: QwikIcon,
  'React.js': ReactJsIcon,
  'Riot.js': RiotJsIcon,
  'Solid.js': SolidJsIcon,
  Stencil: StencilIcon,
  Stimulus: StimulusIcon,
  Svelte: SvelteIcon,
  'Vue.js': VueJsIcon,
  'Next.js': NextJsIcon,
  Gatsby: GatsbyIcon,
  Remix: RemixIcon,
  'Blitz.js': BlitzJSIcon,
  Razzle: RazzleIcon,
  RedwoodJS: RedwoodJSIcon,
  Refine: RefineIcon,
  Wasp: WaspIcon,
  Hydrogen: HydrogenIcon,
  'Nuxt.js': NuxtJsIcon,
  Gridsome: GridsomeIcon,
  Quasar: QuasarIcon,
  VuePress: VueJsIcon,
  'Vue Storefront': VueJsIcon,
  SvelteKit: SvelteIcon,
  SolidStart: SolidJsIcon,
  Scully: ScullyIcon,
  'Angular Universal': AngularJsIcon,
  Docker: DockerIcon,
  'Docker Swarm': DockerIcon,
  'Docker Hub': DockerIcon,
  MAMP: MAMPIcon,
  XAMPP: XAMPPIcon,
  Webpack: WebpackIcon,
  Vite: ViteIcon,
  Rollup: RollupIcon,
  Vercel: VercelIcon,
  Netlify: NetlifyIcon,
  'Cloudflare Pages': CloudflareIcon,
  npm: NpmIcon,
  yarn: YarnIcon,
  pnpm: PnpmIcon,
  'Express.js': ExpressJsIcon,
  Django: DjangoIcon,
  'Ruby on Rails': RubyOnRailsIcon,
  Laravel: LaravelIcon,
  'Spring Boot': SpringBootIcon,
  'ASP.NET Core': ASPNETCoreIcon,
  FastAPI: FastAPIIcon,
  NestJS: NestJsIcon,
  Flask: FlaskIcon,
  Phoenix: PhoenixIcon,
  Symfony: SymfonyIcon,
  Gin: GinIcon,
  CodeIgniter: CodeIgniterIcon,
  Echo: EchoIcon,
  Fiber: FiberIcon,
  'Hapi.js': HapiIcon,
  Fastify: FastifyIcon,
  AdonisJS: AdonisJSIcon,
  CakePHP: CakePHPIcon,
  Rocket: RocketIcon,
  Actix: ActixIcon,
  'Play Framework': PlayScalaIcon,
  Quarkus: QuarkusIcon,
  'Vert.x': VertXIcon,
  Grails: GrailsIcon,
  Loopback: LoopbackIcon,
  'Feathers.js': FeathersJsIcon,
  default: UnsrcIcon,
};

/**
 * Retrieves an icon from the icon library based on the provided name.
 * The function uses a case-insensitive match to find an icon that corresponds to the name.
 * If no match is found, it returns a default icon if provided, or a fallback default icon.
 *
 * @param {IconNameType} name - The name of the icon to retrieve. This is the name that will be matched in the icon library.
 * @param {IconNameType} [defaultOption] - An optional fallback icon name to return if no match is found. If not provided, the function returns a default icon.
 */
export const getIcon = (name: IconNameType, defaultOption?: IconNameType) => {
  // a regex pattern to match the icon name
  const regex = new RegExp(name, 'i'); // 'i' for case-insensitive match

  for (const [key, icon] of Object.entries(library)) {
    if (regex.test(key)) {
      return icon; // Return icon if match
    }
  }

  // Return the provided defaultOption if no match is found, otherwise fallback to 'default'
  return defaultOption ? library[defaultOption] : library.default;
};
