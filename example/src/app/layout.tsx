import './globals.css';
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { ThemeProvider } from '@/components/theme-provider';
import { headers, cookies } from 'next/headers';
import { PreferenceProvider } from '@/context/preference';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const getServerSideTheme = async () => {
  const cookieStore = await cookies();
  const theme = cookieStore.get('theme');
  return theme?.value;
};

export default async function RootLayout({children}: Readonly<{children: React.ReactNode}>) {
  const theme = (await getServerSideTheme()) as 'light' | 'dark';
  return (
    <html lang='en'>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute='class'
          defaultTheme='system'
          enableSystem
          disableTransitionOnChange
        >
          <PreferenceProvider theme={theme}>{children}</PreferenceProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
